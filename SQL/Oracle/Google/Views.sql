/*
- Views (Creating, Modifying, Dropping)
- Materialized Views
- Performance Considerations of Views
*/

-- Creating a View
CREATE OR REPLACE VIEW HARDWARE_ORDER_AMOUNT AS
SELECT first_name, last_name, job_id FROM HR_EMP
WHERE job_id IN (SELECT  job_id FROM HR.HR_EMP WHERE first_name = 'James');


-- Materialized View syntax
CREATE MATERIALIZED VIEW view_name AS
SELECT column1, column2, ... FROM table_name WHERE condition;


-- Materialized View syntax with refresh options
CREATE MATERIALIZED VIEW view_name
REFRESH [FAST | COMPLETE | FORCE]
START WITH sysdate
NEXT sysdate + interval '1' hour
AS
SELECT FIRST_NAME, ORDER_DATE, TOTAL_AMOUNT, STATUS FROM ORDERS O
JOIN USERS U 
ON O.USER_ID = U.USER_ID;

-- Materialized View log
DROP MATERIALIZED VIEW LOG ON ORDERS;

CREATE MATERIALIZED VIEW LOG ON ORDERS
WITH PRIMARY KEY, ROWID
INCLUDING NEW VALUES
(ORDER_DATE, TOTAL_AMOUNT, STATUS, EXTRACT(YEAR FROM ORDER_DATE));


CREATE MATERIALIZED VIEW ORDERS_MV
REFRESH FAST
START WITH sysdate
NEXT sysdate + interval '1' hour
AS
SELECT EXTRACT(YEAR FROM ORDER_DATE) AS ORDER_YEAR, 
	   SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT, 
	   STATUS 
FROM ORDERS
GROUP BY EXTRACT(YEAR FROM ORDER_DATE), STATUS;


INSERT INTO ORDERS (ORDER_ID, USER_ID, ORDER_DATE, TOTAL_AMOUNT, STATUS)
VALUES (1, 1, '2023-10-01', 100.00, 'COMPLETED');